// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sawtooth_sdk/protobuf/client_state_pb2/client_state.proto

/*
Package client_state_pb2 is a generated protocol buffer package.

It is generated from these files:
	sawtooth_sdk/protobuf/client_state_pb2/client_state.proto

It has these top-level messages:
	ClientStateCurrentRequest
	ClientStateCurrentResponse
	ClientStateListRequest
	ClientStateListResponse
	ClientStateGetRequest
	ClientStateGetResponse
*/
package client_state_pb2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import client_list_control "sawtooth_sdk/protobuf/client_list_control_pb2"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClientStateCurrentResponse_Status int32

const (
	ClientStateCurrentResponse_STATUS_UNSET   ClientStateCurrentResponse_Status = 0
	ClientStateCurrentResponse_OK             ClientStateCurrentResponse_Status = 1
	ClientStateCurrentResponse_INTERNAL_ERROR ClientStateCurrentResponse_Status = 2
	ClientStateCurrentResponse_NOT_READY      ClientStateCurrentResponse_Status = 3
)

var ClientStateCurrentResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "INTERNAL_ERROR",
	3: "NOT_READY",
}
var ClientStateCurrentResponse_Status_value = map[string]int32{
	"STATUS_UNSET":   0,
	"OK":             1,
	"INTERNAL_ERROR": 2,
	"NOT_READY":      3,
}

func (x ClientStateCurrentResponse_Status) String() string {
	return proto.EnumName(ClientStateCurrentResponse_Status_name, int32(x))
}
func (ClientStateCurrentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

type ClientStateListResponse_Status int32

const (
	ClientStateListResponse_STATUS_UNSET   ClientStateListResponse_Status = 0
	ClientStateListResponse_OK             ClientStateListResponse_Status = 1
	ClientStateListResponse_INTERNAL_ERROR ClientStateListResponse_Status = 2
	ClientStateListResponse_NOT_READY      ClientStateListResponse_Status = 3
	ClientStateListResponse_NO_ROOT        ClientStateListResponse_Status = 4
	ClientStateListResponse_NO_RESOURCE    ClientStateListResponse_Status = 5
	ClientStateListResponse_INVALID_PAGING ClientStateListResponse_Status = 6
	ClientStateListResponse_INVALID_SORT   ClientStateListResponse_Status = 7
)

var ClientStateListResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "INTERNAL_ERROR",
	3: "NOT_READY",
	4: "NO_ROOT",
	5: "NO_RESOURCE",
	6: "INVALID_PAGING",
	7: "INVALID_SORT",
}
var ClientStateListResponse_Status_value = map[string]int32{
	"STATUS_UNSET":   0,
	"OK":             1,
	"INTERNAL_ERROR": 2,
	"NOT_READY":      3,
	"NO_ROOT":        4,
	"NO_RESOURCE":    5,
	"INVALID_PAGING": 6,
	"INVALID_SORT":   7,
}

func (x ClientStateListResponse_Status) String() string {
	return proto.EnumName(ClientStateListResponse_Status_name, int32(x))
}
func (ClientStateListResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

type ClientStateGetResponse_Status int32

const (
	ClientStateGetResponse_STATUS_UNSET    ClientStateGetResponse_Status = 0
	ClientStateGetResponse_OK              ClientStateGetResponse_Status = 1
	ClientStateGetResponse_INTERNAL_ERROR  ClientStateGetResponse_Status = 2
	ClientStateGetResponse_NOT_READY       ClientStateGetResponse_Status = 3
	ClientStateGetResponse_NO_ROOT         ClientStateGetResponse_Status = 4
	ClientStateGetResponse_NO_RESOURCE     ClientStateGetResponse_Status = 5
	ClientStateGetResponse_INVALID_ADDRESS ClientStateGetResponse_Status = 6
)

var ClientStateGetResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "INTERNAL_ERROR",
	3: "NOT_READY",
	4: "NO_ROOT",
	5: "NO_RESOURCE",
	6: "INVALID_ADDRESS",
}
var ClientStateGetResponse_Status_value = map[string]int32{
	"STATUS_UNSET":    0,
	"OK":              1,
	"INTERNAL_ERROR":  2,
	"NOT_READY":       3,
	"NO_ROOT":         4,
	"NO_RESOURCE":     5,
	"INVALID_ADDRESS": 6,
}

func (x ClientStateGetResponse_Status) String() string {
	return proto.EnumName(ClientStateGetResponse_Status_name, int32(x))
}
func (ClientStateGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

type ClientStateCurrentRequest struct {
}

func (m *ClientStateCurrentRequest) Reset()                    { *m = ClientStateCurrentRequest{} }
func (m *ClientStateCurrentRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientStateCurrentRequest) ProtoMessage()               {}
func (*ClientStateCurrentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ClientStateCurrentResponse struct {
	Status     ClientStateCurrentResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientStateCurrentResponse_Status" json:"status,omitempty"`
	MerkleRoot string                            `protobuf:"bytes,2,opt,name=merkle_root,json=merkleRoot" json:"merkle_root,omitempty"`
}

func (m *ClientStateCurrentResponse) Reset()                    { *m = ClientStateCurrentResponse{} }
func (m *ClientStateCurrentResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientStateCurrentResponse) ProtoMessage()               {}
func (*ClientStateCurrentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ClientStateCurrentResponse) GetStatus() ClientStateCurrentResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientStateCurrentResponse_STATUS_UNSET
}

func (m *ClientStateCurrentResponse) GetMerkleRoot() string {
	if m != nil {
		return m.MerkleRoot
	}
	return ""
}

// A request to list every entry in the merkle tree. Defaults to the most
// current tree, but can fetch older state by specifying either a merkle root
// or a previous head block's id. Results can be further filtered by
// specifying a subtree with a partial address.
type ClientStateListRequest struct {
	// Types that are valid to be assigned to RootKey:
	//	*ClientStateListRequest_MerkleRoot
	//	*ClientStateListRequest_HeadId
	RootKey isClientStateListRequest_RootKey          `protobuf_oneof:"root_key"`
	Address string                                    `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Paging  *client_list_control.ClientPagingControls `protobuf:"bytes,4,opt,name=paging" json:"paging,omitempty"`
	Sorting []*client_list_control.ClientSortControls `protobuf:"bytes,5,rep,name=sorting" json:"sorting,omitempty"`
}

func (m *ClientStateListRequest) Reset()                    { *m = ClientStateListRequest{} }
func (m *ClientStateListRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientStateListRequest) ProtoMessage()               {}
func (*ClientStateListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isClientStateListRequest_RootKey interface {
	isClientStateListRequest_RootKey()
}

type ClientStateListRequest_MerkleRoot struct {
	MerkleRoot string `protobuf:"bytes,1,opt,name=merkle_root,json=merkleRoot,oneof"`
}
type ClientStateListRequest_HeadId struct {
	HeadId string `protobuf:"bytes,2,opt,name=head_id,json=headId,oneof"`
}

func (*ClientStateListRequest_MerkleRoot) isClientStateListRequest_RootKey() {}
func (*ClientStateListRequest_HeadId) isClientStateListRequest_RootKey()     {}

func (m *ClientStateListRequest) GetRootKey() isClientStateListRequest_RootKey {
	if m != nil {
		return m.RootKey
	}
	return nil
}

func (m *ClientStateListRequest) GetMerkleRoot() string {
	if x, ok := m.GetRootKey().(*ClientStateListRequest_MerkleRoot); ok {
		return x.MerkleRoot
	}
	return ""
}

func (m *ClientStateListRequest) GetHeadId() string {
	if x, ok := m.GetRootKey().(*ClientStateListRequest_HeadId); ok {
		return x.HeadId
	}
	return ""
}

func (m *ClientStateListRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ClientStateListRequest) GetPaging() *client_list_control.ClientPagingControls {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *ClientStateListRequest) GetSorting() []*client_list_control.ClientSortControls {
	if m != nil {
		return m.Sorting
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClientStateListRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClientStateListRequest_OneofMarshaler, _ClientStateListRequest_OneofUnmarshaler, _ClientStateListRequest_OneofSizer, []interface{}{
		(*ClientStateListRequest_MerkleRoot)(nil),
		(*ClientStateListRequest_HeadId)(nil),
	}
}

func _ClientStateListRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClientStateListRequest)
	// root_key
	switch x := m.RootKey.(type) {
	case *ClientStateListRequest_MerkleRoot:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.MerkleRoot)
	case *ClientStateListRequest_HeadId:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.HeadId)
	case nil:
	default:
		return fmt.Errorf("ClientStateListRequest.RootKey has unexpected type %T", x)
	}
	return nil
}

func _ClientStateListRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClientStateListRequest)
	switch tag {
	case 1: // root_key.merkle_root
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.RootKey = &ClientStateListRequest_MerkleRoot{x}
		return true, err
	case 2: // root_key.head_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.RootKey = &ClientStateListRequest_HeadId{x}
		return true, err
	default:
		return false, nil
	}
}

func _ClientStateListRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClientStateListRequest)
	// root_key
	switch x := m.RootKey.(type) {
	case *ClientStateListRequest_MerkleRoot:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.MerkleRoot)))
		n += len(x.MerkleRoot)
	case *ClientStateListRequest_HeadId:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.HeadId)))
		n += len(x.HeadId)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ClientStateListResponse struct {
	Status  ClientStateListResponse_Status            `protobuf:"varint,1,opt,name=status,enum=ClientStateListResponse_Status" json:"status,omitempty"`
	Entries []*ClientStateListResponse_Entry          `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
	HeadId  string                                    `protobuf:"bytes,3,opt,name=head_id,json=headId" json:"head_id,omitempty"`
	Paging  *client_list_control.ClientPagingResponse `protobuf:"bytes,4,opt,name=paging" json:"paging,omitempty"`
}

func (m *ClientStateListResponse) Reset()                    { *m = ClientStateListResponse{} }
func (m *ClientStateListResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientStateListResponse) ProtoMessage()               {}
func (*ClientStateListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ClientStateListResponse) GetStatus() ClientStateListResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientStateListResponse_STATUS_UNSET
}

func (m *ClientStateListResponse) GetEntries() []*ClientStateListResponse_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *ClientStateListResponse) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

func (m *ClientStateListResponse) GetPaging() *client_list_control.ClientPagingResponse {
	if m != nil {
		return m.Paging
	}
	return nil
}

// An entry in the State
type ClientStateListResponse_Entry struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ClientStateListResponse_Entry) Reset()         { *m = ClientStateListResponse_Entry{} }
func (m *ClientStateListResponse_Entry) String() string { return proto.CompactTextString(m) }
func (*ClientStateListResponse_Entry) ProtoMessage()    {}
func (*ClientStateListResponse_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

func (m *ClientStateListResponse_Entry) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ClientStateListResponse_Entry) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// A request from a client for a particular entry in the merkle tree.
// Like State List, it defaults to the newest state, but a merkle root
// or head block id can be used to specify older data. Unlike State List
// the request must be provided with a full address that corresponds to
// a single entry.
type ClientStateGetRequest struct {
	// Types that are valid to be assigned to RootKey:
	//	*ClientStateGetRequest_MerkleRoot
	//	*ClientStateGetRequest_HeadId
	RootKey isClientStateGetRequest_RootKey `protobuf_oneof:"root_key"`
	Address string                          `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
}

func (m *ClientStateGetRequest) Reset()                    { *m = ClientStateGetRequest{} }
func (m *ClientStateGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientStateGetRequest) ProtoMessage()               {}
func (*ClientStateGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isClientStateGetRequest_RootKey interface {
	isClientStateGetRequest_RootKey()
}

type ClientStateGetRequest_MerkleRoot struct {
	MerkleRoot string `protobuf:"bytes,1,opt,name=merkle_root,json=merkleRoot,oneof"`
}
type ClientStateGetRequest_HeadId struct {
	HeadId string `protobuf:"bytes,2,opt,name=head_id,json=headId,oneof"`
}

func (*ClientStateGetRequest_MerkleRoot) isClientStateGetRequest_RootKey() {}
func (*ClientStateGetRequest_HeadId) isClientStateGetRequest_RootKey()     {}

func (m *ClientStateGetRequest) GetRootKey() isClientStateGetRequest_RootKey {
	if m != nil {
		return m.RootKey
	}
	return nil
}

func (m *ClientStateGetRequest) GetMerkleRoot() string {
	if x, ok := m.GetRootKey().(*ClientStateGetRequest_MerkleRoot); ok {
		return x.MerkleRoot
	}
	return ""
}

func (m *ClientStateGetRequest) GetHeadId() string {
	if x, ok := m.GetRootKey().(*ClientStateGetRequest_HeadId); ok {
		return x.HeadId
	}
	return ""
}

func (m *ClientStateGetRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClientStateGetRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClientStateGetRequest_OneofMarshaler, _ClientStateGetRequest_OneofUnmarshaler, _ClientStateGetRequest_OneofSizer, []interface{}{
		(*ClientStateGetRequest_MerkleRoot)(nil),
		(*ClientStateGetRequest_HeadId)(nil),
	}
}

func _ClientStateGetRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClientStateGetRequest)
	// root_key
	switch x := m.RootKey.(type) {
	case *ClientStateGetRequest_MerkleRoot:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.MerkleRoot)
	case *ClientStateGetRequest_HeadId:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.HeadId)
	case nil:
	default:
		return fmt.Errorf("ClientStateGetRequest.RootKey has unexpected type %T", x)
	}
	return nil
}

func _ClientStateGetRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClientStateGetRequest)
	switch tag {
	case 1: // root_key.merkle_root
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.RootKey = &ClientStateGetRequest_MerkleRoot{x}
		return true, err
	case 2: // root_key.head_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.RootKey = &ClientStateGetRequest_HeadId{x}
		return true, err
	default:
		return false, nil
	}
}

func _ClientStateGetRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClientStateGetRequest)
	// root_key
	switch x := m.RootKey.(type) {
	case *ClientStateGetRequest_MerkleRoot:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.MerkleRoot)))
		n += len(x.MerkleRoot)
	case *ClientStateGetRequest_HeadId:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.HeadId)))
		n += len(x.HeadId)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The response to a State Get Request from the client. Sends back just
// the data stored at the entry, not the address. Also sends back the
// head block id used to facilitate further requests.
//
// Statuses:
//   * OK - everything worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NOT_READY - the validator does not yet have a genesis block
//   * NO_ROOT - the head block or merkle_root specified was not found
//   * NO_RESOURCE - the address specified doesn't exist
//   * INVALID_ADDRESS - address isn't a valid, i.e. it's a subtree (truncated)
type ClientStateGetResponse struct {
	Status ClientStateGetResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientStateGetResponse_Status" json:"status,omitempty"`
	Value  []byte                        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	HeadId string                        `protobuf:"bytes,3,opt,name=head_id,json=headId" json:"head_id,omitempty"`
}

func (m *ClientStateGetResponse) Reset()                    { *m = ClientStateGetResponse{} }
func (m *ClientStateGetResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientStateGetResponse) ProtoMessage()               {}
func (*ClientStateGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ClientStateGetResponse) GetStatus() ClientStateGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientStateGetResponse_STATUS_UNSET
}

func (m *ClientStateGetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ClientStateGetResponse) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientStateCurrentRequest)(nil), "ClientStateCurrentRequest")
	proto.RegisterType((*ClientStateCurrentResponse)(nil), "ClientStateCurrentResponse")
	proto.RegisterType((*ClientStateListRequest)(nil), "ClientStateListRequest")
	proto.RegisterType((*ClientStateListResponse)(nil), "ClientStateListResponse")
	proto.RegisterType((*ClientStateListResponse_Entry)(nil), "ClientStateListResponse.Entry")
	proto.RegisterType((*ClientStateGetRequest)(nil), "ClientStateGetRequest")
	proto.RegisterType((*ClientStateGetResponse)(nil), "ClientStateGetResponse")
	proto.RegisterEnum("ClientStateCurrentResponse_Status", ClientStateCurrentResponse_Status_name, ClientStateCurrentResponse_Status_value)
	proto.RegisterEnum("ClientStateListResponse_Status", ClientStateListResponse_Status_name, ClientStateListResponse_Status_value)
	proto.RegisterEnum("ClientStateGetResponse_Status", ClientStateGetResponse_Status_name, ClientStateGetResponse_Status_value)
}

func init() {
	proto.RegisterFile("sawtooth_sdk/protobuf/client_state_pb2/client_state.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xae, 0x9b, 0xc4, 0x26, 0x93, 0xd2, 0x5a, 0x5b, 0x42, 0xd3, 0x20, 0xd1, 0xe2, 0x13, 0x12,
	0xc2, 0x95, 0x82, 0xf8, 0xbd, 0xb9, 0x89, 0x15, 0x22, 0x22, 0x3b, 0x5a, 0x3b, 0x48, 0x70, 0x59,
	0x39, 0xf5, 0xd2, 0x46, 0x09, 0x71, 0xf0, 0x6e, 0x80, 0x8a, 0x27, 0xe0, 0x09, 0x78, 0x1d, 0x9e,
	0x83, 0x37, 0xe1, 0xc6, 0xfa, 0x67, 0xc1, 0x0e, 0xa4, 0x27, 0xe0, 0xe6, 0xfd, 0xe6, 0x9b, 0xf1,
	0x37, 0xdf, 0x8c, 0x06, 0x9e, 0xb2, 0xe0, 0x03, 0x8f, 0x22, 0x7e, 0x41, 0x58, 0x38, 0x3b, 0x59,
	0xc6, 0x11, 0x8f, 0x26, 0xab, 0x37, 0x27, 0x67, 0xf3, 0x29, 0x5d, 0x70, 0xc2, 0x78, 0xc0, 0x29,
	0x59, 0x4e, 0x3a, 0x25, 0xc0, 0x4c, 0x69, 0xed, 0xfe, 0x95, 0xa9, 0xf3, 0x29, 0xe3, 0xe4, 0x2c,
	0x5a, 0xf0, 0x38, 0x9a, 0x17, 0x2b, 0x14, 0xf1, 0xac, 0x90, 0x71, 0x0b, 0x0e, 0xbb, 0x69, 0xd0,
	0x4b, 0xaa, 0x77, 0x57, 0x71, 0x2c, 0xbe, 0x31, 0x7d, 0xb7, 0xa2, 0x8c, 0x1b, 0x5f, 0x15, 0x68,
	0xff, 0x29, 0xca, 0x96, 0xd1, 0x82, 0x51, 0xf4, 0x0c, 0xd4, 0x44, 0xd3, 0x8a, 0xb5, 0x94, 0x63,
	0xe5, 0xee, 0x6e, 0xc7, 0x30, 0x37, 0x93, 0x4d, 0x2f, 0x65, 0xe2, 0x3c, 0x03, 0x1d, 0x41, 0xe3,
	0x2d, 0x8d, 0x67, 0x73, 0x4a, 0x62, 0xd1, 0x46, 0x6b, 0x5b, 0x14, 0xa8, 0x63, 0xc8, 0x20, 0x2c,
	0x10, 0xc3, 0x06, 0x35, 0x4b, 0x41, 0x3a, 0xec, 0x78, 0xbe, 0xe5, 0x8f, 0x3d, 0x32, 0x76, 0x3c,
	0xdb, 0xd7, 0xb7, 0x90, 0x0a, 0xdb, 0xee, 0x0b, 0x5d, 0x41, 0x08, 0x76, 0x07, 0x8e, 0x6f, 0x63,
	0xc7, 0x1a, 0x12, 0x1b, 0x63, 0x17, 0xeb, 0xdb, 0xe8, 0x3a, 0xd4, 0x1d, 0xd7, 0x27, 0xd8, 0xb6,
	0x7a, 0xaf, 0xf4, 0x8a, 0xf1, 0x4d, 0x81, 0x9b, 0x05, 0x55, 0x43, 0xe1, 0x40, 0xde, 0x1d, 0xba,
	0x53, 0x96, 0x90, 0xf4, 0x50, 0x7f, 0xbe, 0x55, 0x14, 0x81, 0x0e, 0x41, 0xbb, 0xa0, 0x41, 0x48,
	0xa6, 0x61, 0xa6, 0x50, 0x84, 0xd5, 0x04, 0x18, 0x84, 0xa8, 0x05, 0x5a, 0x10, 0x86, 0x31, 0x65,
	0xac, 0x55, 0x49, 0xc5, 0xcb, 0x27, 0xba, 0x0f, 0xea, 0x32, 0x38, 0x9f, 0x2e, 0xce, 0x5b, 0x55,
	0x11, 0x68, 0x74, 0x9a, 0xb9, 0x2d, 0xa3, 0x14, 0xec, 0x66, 0xf6, 0x0b, 0x27, 0x32, 0x92, 0xa0,
	0x6b, 0x2c, 0x8a, 0x79, 0xc2, 0xaf, 0x1d, 0x57, 0x04, 0x7f, 0x5f, 0xda, 0x28, 0xd0, 0x9f, 0x6c,
	0xc9, 0x39, 0x05, 0xb8, 0x96, 0xc8, 0x25, 0x33, 0x7a, 0x69, 0x7c, 0xa9, 0xc0, 0xc1, 0x6f, 0xcd,
	0xe5, 0xc3, 0x79, 0xbc, 0x36, 0x9c, 0x23, 0x73, 0x03, 0x73, 0x7d, 0x32, 0x4f, 0x40, 0x13, 0xb4,
	0x78, 0x4a, 0x99, 0xe8, 0x39, 0xd1, 0x73, 0x7b, 0x63, 0xa6, 0x2d, 0x78, 0x97, 0x58, 0xd2, 0xd1,
	0xc1, 0x2f, 0xb7, 0x32, 0x4b, 0xa4, 0x57, 0x57, 0x3b, 0x22, 0xcb, 0x49, 0x47, 0xda, 0x0f, 0xa1,
	0x96, 0x56, 0x2e, 0x7a, 0xac, 0x94, 0x3d, 0x46, 0x50, 0x0d, 0x03, 0x1e, 0xa4, 0x53, 0xd9, 0xc1,
	0xe9, 0xb7, 0xf1, 0x59, 0xf9, 0x2b, 0x2b, 0x83, 0x1a, 0xa0, 0x39, 0x2e, 0xc1, 0xae, 0xeb, 0xeb,
	0x55, 0xb4, 0x07, 0x8d, 0xe4, 0x61, 0x7b, 0xee, 0x18, 0x77, 0x6d, 0xbd, 0x96, 0x15, 0x78, 0x69,
	0x0d, 0x07, 0x3d, 0x32, 0xb2, 0xfa, 0x03, 0xa7, 0xaf, 0xab, 0xc9, 0xef, 0x24, 0xe6, 0xb9, 0xd8,
	0xd7, 0x35, 0xe3, 0x13, 0x34, 0x0b, 0xa6, 0xf5, 0xe9, 0xbf, 0x5e, 0xba, 0xd2, 0x5a, 0x7c, 0x2f,
	0xef, 0x7c, 0xfa, 0xf7, 0x7c, 0x2b, 0x1e, 0xad, 0x6d, 0x45, 0x69, 0xb6, 0x05, 0xe2, 0xfa, 0x52,
	0xdc, 0x80, 0xda, 0xfb, 0x60, 0xbe, 0xa2, 0xb9, 0xe1, 0xd9, 0x63, 0xe3, 0xc0, 0x8d, 0x8f, 0xff,
	0x63, 0x12, 0xfb, 0xb0, 0x27, 0x5d, 0xb7, 0x7a, 0x3d, 0x11, 0xf0, 0x74, 0xf5, 0xf4, 0x1e, 0x34,
	0xe5, 0x69, 0x34, 0xc5, 0x69, 0x34, 0xe5, 0x69, 0x1c, 0x29, 0xaf, 0xf5, 0xf5, 0xc3, 0x3a, 0x51,
	0xd3, 0xe8, 0x83, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x88, 0x47, 0x8a, 0x89, 0x05, 0x00,
	0x00,
}
