// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sawtooth_sdk/protobuf/network_pb2/network.proto

/*
Package network_pb2 is a generated protocol buffer package.

It is generated from these files:
	sawtooth_sdk/protobuf/network_pb2/network.proto

It has these top-level messages:
	DisconnectMessage
	PeerRegisterRequest
	PeerUnregisterRequest
	GetPeersRequest
	GetPeersResponse
	PingRequest
	PingResponse
	GossipMessage
	NetworkAcknowledgement
	GossipBlockRequest
	GossipBlockResponse
	GossipBatchResponse
	GossipBatchByBatchIdRequest
	GossipBatchByTransactionIdRequest
*/
package network_pb2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GossipMessage_ContentType int32

const (
	GossipMessage_CONTENT_TYPE_UNSET GossipMessage_ContentType = 0
	GossipMessage_BLOCK              GossipMessage_ContentType = 1
	GossipMessage_BATCH              GossipMessage_ContentType = 2
)

var GossipMessage_ContentType_name = map[int32]string{
	0: "CONTENT_TYPE_UNSET",
	1: "BLOCK",
	2: "BATCH",
}
var GossipMessage_ContentType_value = map[string]int32{
	"CONTENT_TYPE_UNSET": 0,
	"BLOCK":              1,
	"BATCH":              2,
}

func (x GossipMessage_ContentType) String() string {
	return proto.EnumName(GossipMessage_ContentType_name, int32(x))
}
func (GossipMessage_ContentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type NetworkAcknowledgement_Status int32

const (
	NetworkAcknowledgement_STATUS_UNSET NetworkAcknowledgement_Status = 0
	NetworkAcknowledgement_OK           NetworkAcknowledgement_Status = 1
	NetworkAcknowledgement_ERROR        NetworkAcknowledgement_Status = 2
)

var NetworkAcknowledgement_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "ERROR",
}
var NetworkAcknowledgement_Status_value = map[string]int32{
	"STATUS_UNSET": 0,
	"OK":           1,
	"ERROR":        2,
}

func (x NetworkAcknowledgement_Status) String() string {
	return proto.EnumName(NetworkAcknowledgement_Status_name, int32(x))
}
func (NetworkAcknowledgement_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

// The disconnect message from a client to the server
type DisconnectMessage struct {
}

func (m *DisconnectMessage) Reset()                    { *m = DisconnectMessage{} }
func (m *DisconnectMessage) String() string            { return proto.CompactTextString(m) }
func (*DisconnectMessage) ProtoMessage()               {}
func (*DisconnectMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// The registration request from a peer to the validator
type PeerRegisterRequest struct {
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
}

func (m *PeerRegisterRequest) Reset()                    { *m = PeerRegisterRequest{} }
func (m *PeerRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*PeerRegisterRequest) ProtoMessage()               {}
func (*PeerRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PeerRegisterRequest) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

// The unregistration request from a peer to the validator
type PeerUnregisterRequest struct {
}

func (m *PeerUnregisterRequest) Reset()                    { *m = PeerUnregisterRequest{} }
func (m *PeerUnregisterRequest) String() string            { return proto.CompactTextString(m) }
func (*PeerUnregisterRequest) ProtoMessage()               {}
func (*PeerUnregisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetPeersRequest struct {
}

func (m *GetPeersRequest) Reset()                    { *m = GetPeersRequest{} }
func (m *GetPeersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPeersRequest) ProtoMessage()               {}
func (*GetPeersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type GetPeersResponse struct {
	PeerEndpoints []string `protobuf:"bytes,1,rep,name=peer_endpoints,json=peerEndpoints" json:"peer_endpoints,omitempty"`
}

func (m *GetPeersResponse) Reset()                    { *m = GetPeersResponse{} }
func (m *GetPeersResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPeersResponse) ProtoMessage()               {}
func (*GetPeersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetPeersResponse) GetPeerEndpoints() []string {
	if m != nil {
		return m.PeerEndpoints
	}
	return nil
}

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type PingResponse struct {
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type GossipMessage struct {
	Content     []byte                    `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	ContentType GossipMessage_ContentType `protobuf:"varint,2,opt,name=content_type,json=contentType,enum=GossipMessage_ContentType" json:"content_type,omitempty"`
}

func (m *GossipMessage) Reset()                    { *m = GossipMessage{} }
func (m *GossipMessage) String() string            { return proto.CompactTextString(m) }
func (*GossipMessage) ProtoMessage()               {}
func (*GossipMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GossipMessage) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *GossipMessage) GetContentType() GossipMessage_ContentType {
	if m != nil {
		return m.ContentType
	}
	return GossipMessage_CONTENT_TYPE_UNSET
}

// A response sent from the validator to the peer acknowledging message
// receipt
type NetworkAcknowledgement struct {
	Status NetworkAcknowledgement_Status `protobuf:"varint,1,opt,name=status,enum=NetworkAcknowledgement_Status" json:"status,omitempty"`
}

func (m *NetworkAcknowledgement) Reset()                    { *m = NetworkAcknowledgement{} }
func (m *NetworkAcknowledgement) String() string            { return proto.CompactTextString(m) }
func (*NetworkAcknowledgement) ProtoMessage()               {}
func (*NetworkAcknowledgement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *NetworkAcknowledgement) GetStatus() NetworkAcknowledgement_Status {
	if m != nil {
		return m.Status
	}
	return NetworkAcknowledgement_STATUS_UNSET
}

type GossipBlockRequest struct {
	// The id of the block that is being requested
	BlockId string `protobuf:"bytes,1,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	// A random string that provides uniqueness for requests with
	// otherwise identical fields.
	Nonce string `protobuf:"bytes,2,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *GossipBlockRequest) Reset()                    { *m = GossipBlockRequest{} }
func (m *GossipBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*GossipBlockRequest) ProtoMessage()               {}
func (*GossipBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GossipBlockRequest) GetBlockId() string {
	if m != nil {
		return m.BlockId
	}
	return ""
}

func (m *GossipBlockRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type GossipBlockResponse struct {
	// The block
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *GossipBlockResponse) Reset()                    { *m = GossipBlockResponse{} }
func (m *GossipBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GossipBlockResponse) ProtoMessage()               {}
func (*GossipBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GossipBlockResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type GossipBatchResponse struct {
	// The batch
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *GossipBatchResponse) Reset()                    { *m = GossipBatchResponse{} }
func (m *GossipBatchResponse) String() string            { return proto.CompactTextString(m) }
func (*GossipBatchResponse) ProtoMessage()               {}
func (*GossipBatchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GossipBatchResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type GossipBatchByBatchIdRequest struct {
	// The id of the batch that is being requested
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// A random string that provides uniqueness for requests with
	// otherwise identical fields.
	Nonce string `protobuf:"bytes,2,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *GossipBatchByBatchIdRequest) Reset()                    { *m = GossipBatchByBatchIdRequest{} }
func (m *GossipBatchByBatchIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GossipBatchByBatchIdRequest) ProtoMessage()               {}
func (*GossipBatchByBatchIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GossipBatchByBatchIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GossipBatchByBatchIdRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type GossipBatchByTransactionIdRequest struct {
	// The id's of the transaction that are in the batches requested
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	// A random string that provides uniqueness for requests with
	// otherwise identical fields.
	Nonce string `protobuf:"bytes,2,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *GossipBatchByTransactionIdRequest) Reset()         { *m = GossipBatchByTransactionIdRequest{} }
func (m *GossipBatchByTransactionIdRequest) String() string { return proto.CompactTextString(m) }
func (*GossipBatchByTransactionIdRequest) ProtoMessage()    {}
func (*GossipBatchByTransactionIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13}
}

func (m *GossipBatchByTransactionIdRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GossipBatchByTransactionIdRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func init() {
	proto.RegisterType((*DisconnectMessage)(nil), "DisconnectMessage")
	proto.RegisterType((*PeerRegisterRequest)(nil), "PeerRegisterRequest")
	proto.RegisterType((*PeerUnregisterRequest)(nil), "PeerUnregisterRequest")
	proto.RegisterType((*GetPeersRequest)(nil), "GetPeersRequest")
	proto.RegisterType((*GetPeersResponse)(nil), "GetPeersResponse")
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*PingResponse)(nil), "PingResponse")
	proto.RegisterType((*GossipMessage)(nil), "GossipMessage")
	proto.RegisterType((*NetworkAcknowledgement)(nil), "NetworkAcknowledgement")
	proto.RegisterType((*GossipBlockRequest)(nil), "GossipBlockRequest")
	proto.RegisterType((*GossipBlockResponse)(nil), "GossipBlockResponse")
	proto.RegisterType((*GossipBatchResponse)(nil), "GossipBatchResponse")
	proto.RegisterType((*GossipBatchByBatchIdRequest)(nil), "GossipBatchByBatchIdRequest")
	proto.RegisterType((*GossipBatchByTransactionIdRequest)(nil), "GossipBatchByTransactionIdRequest")
	proto.RegisterEnum("GossipMessage_ContentType", GossipMessage_ContentType_name, GossipMessage_ContentType_value)
	proto.RegisterEnum("NetworkAcknowledgement_Status", NetworkAcknowledgement_Status_name, NetworkAcknowledgement_Status_value)
}

func init() { proto.RegisterFile("sawtooth_sdk/protobuf/network_pb2/network.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x25, 0x9d, 0xd6, 0xad, 0xb7, 0x6d, 0xc8, 0x5c, 0x36, 0xca, 0x90, 0x10, 0x58, 0x02, 0xf1,
	0x42, 0x2a, 0x8a, 0x84, 0x84, 0x10, 0x0f, 0x6d, 0x88, 0xc6, 0x34, 0x68, 0x2b, 0xd7, 0x7d, 0x80,
	0x97, 0x28, 0x4d, 0x4c, 0x17, 0x75, 0xd8, 0x21, 0x76, 0x55, 0xed, 0x89, 0x5f, 0xc3, 0xff, 0xc4,
	0xf9, 0x70, 0x3f, 0xa4, 0x4d, 0xe2, 0x29, 0xf7, 0xdc, 0x7b, 0xcf, 0xf1, 0xb1, 0x6f, 0x2e, 0xf4,
	0x64, 0xb8, 0x56, 0x42, 0xa8, 0xeb, 0x40, 0xc6, 0xcb, 0x5e, 0x9a, 0x09, 0x25, 0xe6, 0xab, 0x9f,
	0x3d, 0xce, 0xd4, 0x5a, 0x64, 0xcb, 0x20, 0x9d, 0xf7, 0x4d, 0xec, 0x16, 0x45, 0xdc, 0x81, 0x93,
	0xcf, 0x89, 0x8c, 0x04, 0xe7, 0x2c, 0x52, 0xdf, 0x98, 0x94, 0xe1, 0x82, 0xe1, 0xb7, 0xd0, 0x99,
	0x30, 0x96, 0x11, 0xb6, 0x48, 0xa4, 0xca, 0xbf, 0xbf, 0x57, 0x4c, 0x2a, 0x74, 0x0e, 0xc7, 0x8c,
	0xc7, 0xa9, 0x48, 0xb8, 0xea, 0x5a, 0xcf, 0xad, 0xd7, 0x0d, 0xb2, 0xc1, 0xf8, 0x31, 0x9c, 0xe6,
	0x94, 0x19, 0xcf, 0xf6, 0x49, 0xf8, 0x04, 0x1e, 0x5e, 0x30, 0x95, 0xd7, 0xa4, 0x49, 0x7d, 0x00,
	0x67, 0x9b, 0x92, 0xa9, 0xe0, 0x92, 0xa1, 0x97, 0x60, 0xa7, 0x3a, 0x11, 0x18, 0x41, 0xa9, 0x4f,
	0x38, 0xd0, 0x27, 0xb4, 0xf3, 0xac, 0x6f, 0x92, 0xb8, 0x0d, 0xcd, 0x49, 0xc2, 0x17, 0x46, 0xc9,
	0x86, 0x56, 0x09, 0x4b, 0x15, 0xfc, 0xd7, 0x82, 0xf6, 0x85, 0x90, 0x32, 0x49, 0xab, 0xab, 0xa0,
	0x2e, 0x1c, 0xe9, 0xcb, 0x29, 0x56, 0x59, 0x6e, 0x11, 0x03, 0xd1, 0x27, 0x68, 0x55, 0x61, 0xa0,
	0x6e, 0x53, 0xd6, 0xad, 0xe9, 0xb2, 0xdd, 0x3f, 0x77, 0xf7, 0xf8, 0xae, 0x57, 0xb6, 0x50, 0xdd,
	0x41, 0x9a, 0xd1, 0x16, 0xe0, 0x8f, 0xd0, 0xdc, 0xa9, 0xa1, 0x33, 0x40, 0xde, 0x78, 0x44, 0xfd,
	0x11, 0x0d, 0xe8, 0xf7, 0x89, 0x1f, 0xcc, 0x46, 0x53, 0x9f, 0x3a, 0x0f, 0x50, 0x03, 0x0e, 0x87,
	0x5f, 0xc7, 0xde, 0x95, 0x63, 0x15, 0xe1, 0x80, 0x7a, 0x5f, 0x9c, 0x1a, 0xfe, 0x03, 0x67, 0xa3,
	0x72, 0x0c, 0x83, 0x68, 0xc9, 0xc5, 0xfa, 0x86, 0xc5, 0x0b, 0xf6, 0x2b, 0x77, 0xf5, 0x1e, 0xea,
	0x52, 0x85, 0x6a, 0x25, 0x0b, 0xbb, 0x76, 0xff, 0x99, 0x7b, 0x77, 0xa3, 0x3b, 0x2d, 0xba, 0x48,
	0xd5, 0x8d, 0xdf, 0x40, 0xbd, 0xcc, 0x20, 0x07, 0x5a, 0x53, 0x3a, 0xa0, 0xb3, 0xe9, 0xc6, 0x43,
	0x1d, 0x6a, 0xe3, 0xca, 0x80, 0x4f, 0xc8, 0x98, 0x68, 0x03, 0x3e, 0xa0, 0xf2, 0x9e, 0xc3, 0x1b,
	0x11, 0x2d, 0xcd, 0x80, 0x9f, 0xc0, 0xf1, 0x3c, 0xc7, 0x41, 0x12, 0x57, 0x03, 0x3e, 0x2a, 0xf0,
	0x65, 0x8c, 0x1e, 0xc1, 0x21, 0x17, 0x3c, 0x2a, 0x9f, 0xa9, 0x41, 0x4a, 0x80, 0x7b, 0xd0, 0xd9,
	0x93, 0xa9, 0x86, 0x79, 0xef, 0xa3, 0xef, 0x10, 0x42, 0x15, 0x5d, 0xff, 0x07, 0xc1, 0x83, 0xa7,
	0x3b, 0x84, 0xe1, 0x6d, 0xf1, 0xb9, 0x8c, 0x8d, 0x63, 0x1b, 0x6a, 0x1b, 0xaf, 0x3a, 0xba, 0xc7,
	0xe6, 0x15, 0xbc, 0xd8, 0x13, 0xa1, 0x59, 0xc8, 0x65, 0x18, 0xa9, 0x44, 0xf0, 0xad, 0x94, 0x03,
	0x07, 0x49, 0x6c, 0x7e, 0xbb, 0x3c, 0xbc, 0x5b, 0x6c, 0xf8, 0x0a, 0x4e, 0xcd, 0x92, 0xb9, 0x7a,
	0xc9, 0x5c, 0xb3, 0x64, 0x13, 0xeb, 0x47, 0x73, 0x67, 0xcf, 0xe6, 0xf5, 0xa2, 0xf0, 0xee, 0x5f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x29, 0x76, 0x30, 0x20, 0x93, 0x03, 0x00, 0x00,
}
