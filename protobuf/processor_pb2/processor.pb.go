// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sawtooth_sdk/protobuf/processor_pb2/processor.proto

/*
Package processor_pb2 is a generated protocol buffer package.

It is generated from these files:
	sawtooth_sdk/protobuf/processor_pb2/processor.proto

It has these top-level messages:
	TpRegisterRequest
	TpRegisterResponse
	TpUnregisterRequest
	TpUnregisterResponse
	TpProcessRequest
	TpProcessResponse
*/
package processor_pb2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TpRegisterResponse_Status int32

const (
	TpRegisterResponse_STATUS_UNSET TpRegisterResponse_Status = 0
	TpRegisterResponse_OK           TpRegisterResponse_Status = 1
	TpRegisterResponse_ERROR        TpRegisterResponse_Status = 2
)

var TpRegisterResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "ERROR",
}
var TpRegisterResponse_Status_value = map[string]int32{
	"STATUS_UNSET": 0,
	"OK":           1,
	"ERROR":        2,
}

func (x TpRegisterResponse_Status) String() string {
	return proto.EnumName(TpRegisterResponse_Status_name, int32(x))
}
func (TpRegisterResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type TpUnregisterResponse_Status int32

const (
	TpUnregisterResponse_STATUS_UNSET TpUnregisterResponse_Status = 0
	TpUnregisterResponse_OK           TpUnregisterResponse_Status = 1
	TpUnregisterResponse_ERROR        TpUnregisterResponse_Status = 2
)

var TpUnregisterResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "ERROR",
}
var TpUnregisterResponse_Status_value = map[string]int32{
	"STATUS_UNSET": 0,
	"OK":           1,
	"ERROR":        2,
}

func (x TpUnregisterResponse_Status) String() string {
	return proto.EnumName(TpUnregisterResponse_Status_name, int32(x))
}
func (TpUnregisterResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

type TpProcessResponse_Status int32

const (
	TpProcessResponse_STATUS_UNSET        TpProcessResponse_Status = 0
	TpProcessResponse_OK                  TpProcessResponse_Status = 1
	TpProcessResponse_INVALID_TRANSACTION TpProcessResponse_Status = 2
	TpProcessResponse_INTERNAL_ERROR      TpProcessResponse_Status = 3
)

var TpProcessResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "INVALID_TRANSACTION",
	3: "INTERNAL_ERROR",
}
var TpProcessResponse_Status_value = map[string]int32{
	"STATUS_UNSET": 0,
	"OK":           1,
	"INVALID_TRANSACTION": 2,
	"INTERNAL_ERROR":      3,
}

func (x TpProcessResponse_Status) String() string {
	return proto.EnumName(TpProcessResponse_Status_name, int32(x))
}
func (TpProcessResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

// The registration request from the transaction processor to the
// validator/executor
type TpRegisterRequest struct {
	// A settled upon name for the capabilities of the transaction processor.
	// For example: intkey, xo
	Family string `protobuf:"bytes,1,opt,name=family" json:"family,omitempty"`
	// The version supported.  For example:
	//      1.0  for version 1.0
	//      2.1  for version 2.1
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// The namespaces this transaction processor expects to interact with
	// when processing transations matching this specification; will be
	// enforced by the state API on the validator.
	Namespaces []string `protobuf:"bytes,4,rep,name=namespaces" json:"namespaces,omitempty"`
}

func (m *TpRegisterRequest) Reset()                    { *m = TpRegisterRequest{} }
func (m *TpRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*TpRegisterRequest) ProtoMessage()               {}
func (*TpRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TpRegisterRequest) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

func (m *TpRegisterRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *TpRegisterRequest) GetNamespaces() []string {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

// A response sent from the validator to the transaction processor
// acknowledging the registration
type TpRegisterResponse struct {
	Status TpRegisterResponse_Status `protobuf:"varint,1,opt,name=status,enum=TpRegisterResponse_Status" json:"status,omitempty"`
}

func (m *TpRegisterResponse) Reset()                    { *m = TpRegisterResponse{} }
func (m *TpRegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*TpRegisterResponse) ProtoMessage()               {}
func (*TpRegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TpRegisterResponse) GetStatus() TpRegisterResponse_Status {
	if m != nil {
		return m.Status
	}
	return TpRegisterResponse_STATUS_UNSET
}

// The unregistration request from the transaction processor to the
// validator/executor. The correct handlers are determined from the
// zeromq identity of the tp, on the validator side.
type TpUnregisterRequest struct {
}

func (m *TpUnregisterRequest) Reset()                    { *m = TpUnregisterRequest{} }
func (m *TpUnregisterRequest) String() string            { return proto.CompactTextString(m) }
func (*TpUnregisterRequest) ProtoMessage()               {}
func (*TpUnregisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// A response sent from the validator to the transaction processor
// acknowledging the unregistration
type TpUnregisterResponse struct {
	Status TpUnregisterResponse_Status `protobuf:"varint,1,opt,name=status,enum=TpUnregisterResponse_Status" json:"status,omitempty"`
}

func (m *TpUnregisterResponse) Reset()                    { *m = TpUnregisterResponse{} }
func (m *TpUnregisterResponse) String() string            { return proto.CompactTextString(m) }
func (*TpUnregisterResponse) ProtoMessage()               {}
func (*TpUnregisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TpUnregisterResponse) GetStatus() TpUnregisterResponse_Status {
	if m != nil {
		return m.Status
	}
	return TpUnregisterResponse_STATUS_UNSET
}

// The request from the validator/executor of the transaction processor
// to verify a transaction.
type TpProcessRequest struct {
	Header    []byte `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Payload   []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	ContextId string `protobuf:"bytes,4,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
}

func (m *TpProcessRequest) Reset()                    { *m = TpProcessRequest{} }
func (m *TpProcessRequest) String() string            { return proto.CompactTextString(m) }
func (*TpProcessRequest) ProtoMessage()               {}
func (*TpProcessRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TpProcessRequest) GetHeader() []byte {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TpProcessRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *TpProcessRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *TpProcessRequest) GetContextId() string {
	if m != nil {
		return m.ContextId
	}
	return ""
}

// The response from the transaction processor to the validator/executor
// used to respond about the validity of a transaction
type TpProcessResponse struct {
	Status TpProcessResponse_Status `protobuf:"varint,1,opt,name=status,enum=TpProcessResponse_Status" json:"status,omitempty"`
	// A message to include on responses in the cases where
	// status is either INVALID_TRANSACTION or INTERNAL_ERROR
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// Information that may be included with the response.
	// This information is an opaque, application-specific encoded block of
	// data that will be propagated back to the transaction submitter.
	ExtendedData []byte `protobuf:"bytes,3,opt,name=extended_data,json=extendedData,proto3" json:"extended_data,omitempty"`
}

func (m *TpProcessResponse) Reset()                    { *m = TpProcessResponse{} }
func (m *TpProcessResponse) String() string            { return proto.CompactTextString(m) }
func (*TpProcessResponse) ProtoMessage()               {}
func (*TpProcessResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TpProcessResponse) GetStatus() TpProcessResponse_Status {
	if m != nil {
		return m.Status
	}
	return TpProcessResponse_STATUS_UNSET
}

func (m *TpProcessResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TpProcessResponse) GetExtendedData() []byte {
	if m != nil {
		return m.ExtendedData
	}
	return nil
}

func init() {
	proto.RegisterType((*TpRegisterRequest)(nil), "TpRegisterRequest")
	proto.RegisterType((*TpRegisterResponse)(nil), "TpRegisterResponse")
	proto.RegisterType((*TpUnregisterRequest)(nil), "TpUnregisterRequest")
	proto.RegisterType((*TpUnregisterResponse)(nil), "TpUnregisterResponse")
	proto.RegisterType((*TpProcessRequest)(nil), "TpProcessRequest")
	proto.RegisterType((*TpProcessResponse)(nil), "TpProcessResponse")
	proto.RegisterEnum("TpRegisterResponse_Status", TpRegisterResponse_Status_name, TpRegisterResponse_Status_value)
	proto.RegisterEnum("TpUnregisterResponse_Status", TpUnregisterResponse_Status_name, TpUnregisterResponse_Status_value)
	proto.RegisterEnum("TpProcessResponse_Status", TpProcessResponse_Status_name, TpProcessResponse_Status_value)
}

func init() {
	proto.RegisterFile("sawtooth_sdk/protobuf/processor_pb2/processor.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x09, 0x18, 0x65, 0xe4, 0x56, 0x66, 0x4b, 0xc1, 0xa0, 0x82, 0x2a, 0x73, 0xe9, 0x05,
	0x23, 0x52, 0xfe, 0x80, 0xa1, 0x39, 0x58, 0x54, 0x4e, 0xb5, 0xde, 0x70, 0xe0, 0x62, 0x6d, 0xba,
	0xd3, 0xd4, 0xa2, 0xf5, 0x2e, 0xde, 0x0d, 0xa5, 0xe2, 0xc4, 0x9f, 0xe4, 0xf7, 0xb0, 0xd9, 0xd8,
	0x34, 0x1f, 0x1c, 0x90, 0xb8, 0xf9, 0xbd, 0x79, 0xf2, 0xbc, 0x99, 0xb7, 0x03, 0xc7, 0x9a, 0xdf,
	0x18, 0x29, 0xcd, 0x65, 0xa9, 0xc5, 0x97, 0x37, 0xaa, 0x91, 0x46, 0x4e, 0xe7, 0x17, 0x8b, 0x8f,
	0x73, 0xd4, 0x5a, 0x36, 0xa5, 0x9a, 0x0e, 0xef, 0x50, 0xe2, 0x04, 0x31, 0xc2, 0x23, 0xa6, 0x28,
	0xce, 0x2a, 0x6d, 0xb0, 0xa1, 0xf8, 0x75, 0x8e, 0xda, 0x90, 0x27, 0xe0, 0x5f, 0xf0, 0xeb, 0xea,
	0xea, 0x36, 0xf2, 0x0e, 0xbd, 0xa3, 0x01, 0x6d, 0x11, 0x89, 0xe0, 0xe1, 0x37, 0x6c, 0x74, 0x25,
	0xeb, 0xa8, 0xe7, 0x0a, 0x1d, 0x24, 0x2f, 0x01, 0x6a, 0x7e, 0x8d, 0x5a, 0x71, 0xfb, 0xf7, 0xe8,
	0xfe, 0x61, 0xdf, 0x16, 0x57, 0x98, 0xf8, 0x06, 0xc8, 0x6a, 0x1b, 0xad, 0x64, 0xad, 0x91, 0x0c,
	0xc1, 0xd7, 0x86, 0x9b, 0xb9, 0x76, 0x7d, 0x76, 0x87, 0xcf, 0x93, 0x6d, 0x51, 0x52, 0x38, 0x05,
	0x6d, 0x95, 0xf1, 0x6b, 0xf0, 0x97, 0x0c, 0x09, 0x21, 0x28, 0x58, 0xca, 0x26, 0x45, 0x39, 0xc9,
	0x8b, 0x11, 0x0b, 0xef, 0x11, 0x1f, 0x7a, 0xe3, 0x8f, 0xa1, 0x47, 0x06, 0xf0, 0x60, 0x44, 0xe9,
	0x98, 0x86, 0xbd, 0x78, 0x1f, 0xf6, 0x98, 0x9a, 0xd4, 0xcd, 0xfa, 0x84, 0xf1, 0x0f, 0x78, 0xbc,
	0x4e, 0xb7, 0x8e, 0xde, 0x6d, 0x38, 0x3a, 0x48, 0xfe, 0x26, 0xfb, 0x4f, 0x4f, 0x3f, 0x3d, 0x08,
	0x99, 0x3a, 0x5b, 0x26, 0xb1, 0xb2, 0xf3, 0x4b, 0xe4, 0x02, 0x1b, 0xd7, 0x39, 0xa0, 0x2d, 0x5a,
	0xec, 0x5c, 0xf1, 0xdb, 0x2b, 0xc9, 0x85, 0xdb, 0x79, 0x40, 0x3b, 0x48, 0x0e, 0x60, 0xa0, 0xab,
	0x59, 0x6d, 0xfb, 0x36, 0x18, 0xf5, 0x5d, 0x1e, 0x77, 0x04, 0x79, 0x01, 0x70, 0x2e, 0x6b, 0x83,
	0xdf, 0x4d, 0x59, 0x09, 0x9b, 0x88, 0x2b, 0xb7, 0x4c, 0x26, 0xe2, 0x5f, 0xde, 0x22, 0xf8, 0x3f,
	0x1e, 0xda, 0xf1, 0xdf, 0x6e, 0x8c, 0xff, 0x2c, 0xd9, 0xd2, 0x6c, 0xcc, 0xbe, 0xf0, 0x67, 0x53,
	0xd6, 0x7c, 0x86, 0xdd, 0x9b, 0x68, 0x21, 0x79, 0x05, 0x3b, 0xb6, 0x17, 0xd6, 0x02, 0x45, 0x29,
	0xb8, 0xe1, 0xce, 0x63, 0x40, 0x83, 0x8e, 0x3c, 0xb1, 0x5c, 0x3c, 0xfe, 0x87, 0xd5, 0x3d, 0x85,
	0xbd, 0x2c, 0xff, 0x94, 0x9e, 0x66, 0x27, 0x25, 0xa3, 0x69, 0x5e, 0xa4, 0x1f, 0x58, 0x36, 0xce,
	0xc3, 0x1e, 0x21, 0xb0, 0x9b, 0xe5, 0x6c, 0x44, 0xf3, 0xf4, 0xb4, 0x5c, 0x2e, 0xb7, 0xff, 0xfe,
	0x08, 0xf6, 0xbb, 0x3b, 0x48, 0xec, 0x1d, 0x24, 0xdd, 0x1d, 0x9c, 0x79, 0x9f, 0x77, 0xd6, 0x4e,
	0x61, 0xea, 0xbb, 0xd2, 0xf1, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x75, 0x20, 0x4f, 0xfb, 0x38,
	0x03, 0x00, 0x00,
}
